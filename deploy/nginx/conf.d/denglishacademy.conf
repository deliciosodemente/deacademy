# Main server configuration for denglishacademy.com
# Production-ready with SSL, caching, and load balancing

# Redirect HTTP to HTTPS
server {
    listen 80;
    server_name denglishacademy.com www.denglishacademy.com;
    
    # Let's Encrypt challenge
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    
    # Redirect all other traffic to HTTPS
    location / {
        return 301 https://denglishacademy.com$request_uri;
    }
}

# Main HTTPS server
server {
    listen 443 ssl http2;
    server_name denglishacademy.com www.denglishacademy.com;
    
    # SSL configuration
    ssl_certificate /etc/nginx/ssl/live/denglishacademy.com/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/denglishacademy.com/privkey.pem;
    ssl_trusted_certificate /etc/nginx/ssl/live/denglishacademy.com/chain.pem;
    
    # Root directory
    root /usr/share/nginx/html;
    index index.html;
    
    # Rate limiting
    limit_req zone=api burst=20 nodelay;
    limit_conn conn_limit_per_ip 20;
    
    # Static assets with aggressive caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|webp|avif)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        
        # Try CDN first, then local files
        try_files $uri @cdn;
        
        # Compression
        gzip_static on;
    }
    
    # CDN fallback
    location @cdn {
        proxy_pass http://dea_cdn;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Cache CDN responses
        proxy_cache_valid 200 1y;
        proxy_cache_valid 404 1m;
    }
    
    # API endpoints
    location /api/ {
        # Rate limiting for API
        limit_req zone=api burst=10 nodelay;
        
        proxy_pass http://dea_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeouts
        proxy_connect_timeout 5s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        
        # Health check
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
    }
    
    # Authentication endpoints with stricter rate limiting
    location ~ ^/api/(auth|login|register|password-reset) {
        limit_req zone=login burst=5 nodelay;
        
        proxy_pass http://dea_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Longer timeout for auth operations
        proxy_read_timeout 120s;
    }
    
    # Webhook endpoints (Stripe, Auth0)
    location ~ ^/api/webhooks/ {
        # Allow larger payloads for webhooks
        client_max_body_size 1m;
        
        proxy_pass http://dea_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Preserve original headers for webhook verification
        proxy_pass_request_headers on;
    }
    
    # Health check endpoint
    location /health {
        access_log off;
        proxy_pass http://dea_backend;
        proxy_set_header Host $host;
        proxy_connect_timeout 2s;
        proxy_read_timeout 2s;
    }
    
    # Service worker
    location /sw.js {
        expires off;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        try_files $uri =404;
    }
    
    # Manifest and other PWA files
    location ~ \.(webmanifest|manifest\.json)$ {
        expires 1d;
        add_header Cache-Control "public";
        try_files $uri =404;
    }
    
    # Robots and sitemap
    location ~ ^/(robots\.txt|sitemap\.xml)$ {
        expires 1d;
        add_header Cache-Control "public";
        try_files $uri =404;
    }
    
    # Security.txt
    location /.well-known/security.txt {
        expires 1d;
        add_header Cache-Control "public";
        try_files $uri =404;
    }
    
    # Block access to sensitive files
    location ~ /\.(ht|git|env) {
        deny all;
        return 404;
    }
    
    location ~ \.(sql|log|conf)$ {
        deny all;
        return 404;
    }
    
    # SPA routing - serve index.html for all routes
    location / {
        try_files $uri $uri/ @fallback;
        
        # Cache HTML files for short time
        location ~* \.html$ {
            expires 1h;
            add_header Cache-Control "public, must-revalidate";
        }
    }
    
    # Fallback for SPA routing
    location @fallback {
        rewrite ^.*$ /index.html last;
    }
    
    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        internal;
    }
    
    location = /50x.html {
        internal;
    }
}

# Monitoring subdomain
server {
    listen 443 ssl http2;
    server_name grafana.denglishacademy.com;
    
    # SSL configuration (same certificates)
    ssl_certificate /etc/nginx/ssl/live/denglishacademy.com/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/denglishacademy.com/privkey.pem;
    
    # Basic auth for additional security
    auth_basic "Monitoring Access";
    auth_basic_user_file /etc/nginx/.htpasswd;
    
    location / {
        proxy_pass http://grafana:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket support for Grafana
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}